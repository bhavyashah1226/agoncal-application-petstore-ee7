// ********RoostGPT********
/*
Test generated by RoostGPT for test ZBIO-4912-Rest-Assured-Testing using AI Type Open AI and AI Model gpt-4

Test generated for /products_post for http method type POST in rest-assured framework

RoostTestHash=2c080099fd


*/

// ********RoostGPT********

@Test  
public void productsPost_Test() {
    this.setUp();
    for (Map<String, String> map : envList) {
      
      // If the baseURI is not a valid URL or is null, an IllegalStateException with "Target host is null" will be thrown
      // Make sure the CSV file is properly loaded and contains a valid URL
      RestAssured.baseURI = map.get("BASE_URL");  
  
            Response response = given()
        .contentType(ContentType.JSON)
        .body("{\n"+
            "  \"id\": \"" + (map.get("id") != null ? map.get("id") : "") + "\",\n" +
            "  \"name\": \"" + (map.get("name") != null ? map.get("name") : "") + "\",\n" +
            "  \"description\": \"" + (map.get("description") != null ? map.get("description") : "") + "\",\n" +
            "  \"price\": \"" + (map.get("price") != null ? map.get("price") : "") + "\n" +
         "}")
        .when()
        .post("/products")  
        .then() 
        .extract().response();    
     
            if (response.statusCode() == 200) {
        System.out.println("Description: Successful operation");
  
          if (response.jsonPath().get("id") != null) {  
            MatcherAssert.assertThat(response.jsonPath().get("id"), instanceOf(Integer.class));  
      }
  
          if (response.jsonPath().get("name") != null) {  
            MatcherAssert.assertThat(response.jsonPath().get("name"), instanceOf(String.class));  
      }
  
          if (response.jsonPath().get("description") != null) {  
            MatcherAssert.assertThat(response.jsonPath().get("description"), instanceOf(String.class));  
      }
  
          if (response.jsonPath().get("price") != null) {  
            MatcherAssert.assertThat(response.jsonPath().get("price"), instanceOf(Integer.class));  
      }
        }
if (response.statusCode() == 405) {
        System.out.println("Description: Invalid input");
    }
  
        }  
}
