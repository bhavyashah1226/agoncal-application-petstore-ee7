// ********RoostGPT********
/*
Test generated by RoostGPT for test pomXmlTest using AI Type Open AI and AI Model gpt-4

1. Test Scenario: Check when the object compared is the same as 'this' object.
   Description: The function should return true when the object being compared to 'this' object is the same object. 

2. Test Scenario: Check when the object compared is null.
   Description: The function should return false when the object being compared is null.

3. Test Scenario: Check when the object compared is not of the same class as 'this' object.
   Description: The function should return false when the object being compared is not of the same class as 'this' object. 

4. Test Scenario: Check when the object compared is of the same class but has a different 'login' value.
   Description: The function should return false when the object being compared is of the same class as 'this' object but has a different 'login' value.

5. Test Scenario: Check when the object compared is of the same class and has the same 'login' value.
   Description: The function should return true when the object being compared is of the same class as 'this' object and has the same 'login' value.

6. Test Scenario: Check when the object compared is a subclass of the 'this' object's class.
   Description: The function should return false when the object being compared is a subclass of the 'this' object's class even if the 'login' values are the same.

7. Test Scenario: Check when the object compared has a null 'login' value.
   Description: The function should return false when the object being compared has a null 'login' value, regardless of the class of the object.

8. Test Scenario: Check when 'this' object has a null 'login' value.
   Description: The function should return false when 'this' object has a null 'login' value, regardless of the class and 'login' value of the object being compared.

9. Test Scenario: Check with objects of different classes that have null 'login' values.
   Description: The function should return false when the object being compared and 'this' object are of different classes and both have null 'login' values.

10. Test Scenario: Check with objects of the same class that have null 'login' values.
    Description: The function should return true when the object being compared and 'this' object are of the same class and both have null 'login' values.
*/

// ********RoostGPT********
import org.agoncal.application.petstore.model.Customer;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class Customer_equals_f2d574000d_Test {

    @Test
    public void testEqualsSameObject() {
        Customer customer1 = new Customer();
        assertTrue(customer1.equals(customer1));
    }

    @Test
    public void testEqualsNullObject() {
        Customer customer1 = new Customer();
        assertFalse(customer1.equals(null));
    }

    @Test
    public void testEqualsDifferentClass() {
        Customer customer1 = new Customer();
        String customer2 = new String();
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsDifferentLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin("login1");
        Customer customer2 = new Customer();
        customer2.setLogin("login2");
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsSameLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin("login");
        Customer customer2 = new Customer();
        customer2.setLogin("login");
        assertTrue(customer1.equals(customer2));
    }

    @Test
    public void testEqualsSubclass() {
        Customer customer1 = new Customer();
        customer1.setLogin("login");
        Customer customer2 = new Customer() {};
        customer2.setLogin("login");
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsNullLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin("login");
        Customer customer2 = new Customer();
        customer2.setLogin(null);
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsThisObjectNullLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin(null);
        Customer customer2 = new Customer();
        customer2.setLogin("login");
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsDifferentClassNullLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin(null);
        String customer2 = new String();
        assertFalse(customer1.equals(customer2));
    }

    @Test
    public void testEqualsSameClassNullLogin() {
        Customer customer1 = new Customer();
        customer1.setLogin(null);
        Customer customer2 = new Customer();
        customer2.setLogin(null);
        assertTrue(customer1.equals(customer2));
    }
}
