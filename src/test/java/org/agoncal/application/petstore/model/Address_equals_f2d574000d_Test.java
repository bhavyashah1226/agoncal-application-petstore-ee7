// ********RoostGPT********
/*
Test generated by RoostGPT for test pomXmlTest using AI Type Open AI and AI Model gpt-4

Test Scenario 1: Identical Objects
- Given two identical Address objects
- When the equals method is called on these objects
- Then the result should be true

Test Scenario 2: Null Object
- Given one Address object and a null object
- When the equals method is called on these objects
- Then the result should be false

Test Scenario 3: Different Object Types
- Given one Address object and one non-Address object
- When the equals method is called on these objects
- Then the result should be false

Test Scenario 4: Same Class, Different Attributes
- Given two Address objects with different street1, city or zipcode attributes
- When the equals method is called on these objects
- Then the result should be false

Test Scenario 5: Same Class, Same Attributes
- Given two Address objects with the same street1, city and zipcode attributes
- When the equals method is called on these objects
- Then the result should be true

Test Scenario 6: Same Class, Different Case Attributes
- Given two Address objects with the same street1, city and zipcode attributes but in different cases (lower/upper)
- When the equals method is called on these objects
- Then the result should be false, assuming that the equals method is case-sensitive

Test Scenario 7: Same Class, Null Attributes
- Given two Address objects where either object has null street1, city or zipcode attributes
- When the equals method is called on these objects
- Then the result should be false

Test Scenario 8: Same Class, Empty Attributes
- Given two Address objects where either object has empty street1, city or zipcode attributes
- When the equals method is called on these objects
- Then the result should be false, assuming that empty strings are not considered equal to non-empty strings.
*/

// ********RoostGPT********
package org.agoncal.application.petstore.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.jupiter.api.Assertions.*;

class Address_equals_f2d574000d_Test {

    private Address address1;
    private Address address2;
    private Country country;

    @BeforeEach
    void setUp() {
        country = new Country("US", "United States", "USA", "USA", "123");
        address1 = new Address("123 Main St", "New York", "10001", country);
        address2 = new Address("123 Main St", "New York", "10001", country);
    }

    @Test
    void testEquals_identicalObjects() {
        assertTrue(address1.equals(address1));
    }

    @Test
    void testEquals_nullObject() {
        assertFalse(address1.equals(null));
    }

    @Test
    void testEquals_differentObjectTypes() {
        assertFalse(address1.equals(new Object()));
    }

    @Test
    void testEquals_sameClassDifferentAttributes() {
        address2.setStreet1("456 Broadway");
        assertFalse(address1.equals(address2));
    }

    @Test
    void testEquals_sameClassSameAttributes() {
        assertTrue(address1.equals(address2));
    }

    @Test
    void testEquals_sameClassDifferentCaseAttributes() {
        address2.setStreet1("123 MAIN ST");
        assertFalse(address1.equals(address2));
    }

    @Test
    void testEquals_sameClassNullAttributes() {
        address2.setStreet1(null);
        assertFalse(address1.equals(address2));
    }

    @Test
    void testEquals_sameClassEmptyAttributes() {
        address2.setStreet1("");
        assertFalse(address1.equals(address2));
    }
}
